docker_setup: &docker_setup
  docker:
    # specify the version you desire here
    - image: costea32/testmonkeys:browserstack-local

  working_directory: ~/repo

  environment:
    # Customize the JVM maximum heap limit
    MAVEN_OPTS: -Xmx3200m


browserstack_run: &browserstack_run
  steps:
    - checkout

    - restore_cache:
        keys:
          # when lock file changes, use increasingly general patterns to restore cache
          - maven-repo-v1-{{ .Branch }}-{{ checksum "pom.xml" }}
          - maven-repo-v1-{{ .Branch }}-
          - maven-repo-v1-

    - run:
        name: UI Tests
        command: |
          /usr/bin/BrowserStackLocal --key ${BROWSERSTACK_ACCESS_KEY} --local-identifier ${BROWSERSTACK_LOCAL_IDENTIFIER} &
          mvn test -Pbrowser -Dbrowser.profile=profiles/${BROWSERPROFILE}

    - save_cache:
        paths:
          - ~/.m2
        key: v1-dependencies-{{ checksum "pom.xml" }}


    - run:
        name: Save test results
        command: |
          mkdir -p ~/junit/
          find . -type f -regex ".*/target/surefire-reports/.*xml" -exec cp {} ~/junit/ \;
        when: always

    - store_test_results:
        path: ~/junit

    - run:
        command: |
          touch ~/repo/junit-tests/target/mvnrelease.out
          touch ~/repo/junit-tests/target/circleTag.out
          echo $CIRCLE_TAG > ~/repo/junit-tests/target/circleTag.out
          export MAVEN_RELEASE_VERSION="$(echo $CIRCLE_TAG | cut -c 2-)"
          echo $MAVEN_RELEASE_VERSION > ~/repo/junit-tests/target/mvnrelease.out

    - store_artifacts:
        path: ~/repo/junit-tests/target


version: 2
references:
  workspace_root: &workspace_root
    /tmp/workspace

  attach_workspace: &attach_workspace
    attach_workspace:
      at: *workspace_root

workflows:
  version: 2
  build-test:
    jobs:
      - build
      - test-chrome:
          requires:
            - build
#      - test-phantomjs:
#          requires:
#            - build
      - test-bstack-chrome-latest:
          requires:
            - build
      - test-bstack-firefox-latest:
          requires:
            - build
      - test-bstack-safari-latest:
          requires:
            - build
      - test-bstack-edge-latest:
          requires:
            - build
      - test-bstack-IE6-WinXP:
          requires:
            - build

  release:
    jobs:
      - build:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - test-chrome:
          requires:
            - build
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - test-phantomjs:
          requires:
            - build
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - create-package:
          requires:
            - test-chrome
            - test-phantomjs
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - bintray-upload:
          requires:
            - create-package
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/


jobs:
##################################################################
##
##BUILD JOB
##
##################################################################
  build:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:8u141-browsers

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m



    steps:
      - checkout

      - restore_cache:
            keys:
              # when lock file changes, use increasingly general patterns to restore cache
              - maven-repo-v1-{{ .Branch }}-{{ checksum "pom.xml" }}
              - maven-repo-v1-{{ .Branch }}-
              - maven-repo-v1-

      - run: mvn install -DskipTests=true -DfailIfNoTests=false

      - save_cache:
            paths:
              - ~/.m2
            key: maven-repo-v1-{{ .Branch }}-{{ checksum "pom.xml" }}


##################################################################
##
##TEST-CHROME JOB
##
##################################################################
  test-chrome:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:8u141-browsers

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m



    steps:

      - checkout

      - restore_cache:
            keys:
              # when lock file changes, use increasingly general patterns to restore cache
              - maven-repo-v1-{{ .Branch }}-{{ checksum "pom.xml" }}
              - maven-repo-v1-{{ .Branch }}-
              - maven-repo-v1-

      - run:
          name: Install latest Chrome browser
          command: |
            wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
            sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list'
            sudo apt-get update
            sudo apt-get install google-chrome-stable
            google-chrome --version


      - run:
          name: Install latest version of ChromeDriver
          command: |
            sudo wget https://chromedriver.storage.googleapis.com/LATEST_RELEASE
            lastVersion=$(cat LATEST_RELEASE)
            sudo wget "https://chromedriver.storage.googleapis.com/$url${lastVersion}/chromedriver_linux64.zip"
            sudo unzip chromedriver_linux64.zip
            sudo rm chromedriver_linux64.zip
            sudo mv chromedriver /usr/bin/
            sudo chmod 777 /usr/bin/chromedriver
            sudo apt-get install libxi6 libgconf-2-4
            sudo apt-get -y install xvfb gtk2-engines-pixbuf
            sudo apt-get -y install xfonts-cyrillic xfonts-100dpi xfonts-75dpi xfonts-base xfonts-scalable
            sudo apt-get install xvfb
            sudo apt-get -y install imagemagick x11-apps

      - run:
          name: Install fluxbox
          command: sudo apt-get install fluxbox

      - run:
          name: start xvfb
          command: |
            export DISPLAY=:99
            Xvfb :99 -ac -screen 1 1024x768x24 & fluxbox &
          background: true

      - run:
          name: Start local webServer
          command: |
            cd ~/repo/junit-tests/src/test/resources/WebPages
            pwd
            sudo python -m SimpleHTTPServer 8080 > server.out &
          background: true
#            curl localhost:8080

      - run:
          name: UI Tests
          command: |
            mvn test -Pbrowser -Dbrowser.profile=profiles/local-chrome.yaml -Dwebdriver.chrome.driver=/usr/bin/chromedriver

      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "pom.xml" }}


      - run:
          name: Save test results
          command: |
             mkdir -p ~/junit/
             find . -type f -regex ".*/target/surefire-reports/.*xml" -exec cp {} ~/junit/ \;
          when: always

      - store_test_results:
          path: ~/junit

      - run:
          command: |
            touch ~/repo/junit-tests/target/mvnrelease.out
            touch ~/repo/junit-tests/target/circleTag.out
            echo $CIRCLE_TAG > ~/repo/junit-tests/target/circleTag.out
            export MAVEN_RELEASE_VERSION="$(echo $CIRCLE_TAG | cut -c 2-)"
            echo $MAVEN_RELEASE_VERSION > ~/repo/junit-tests/target/mvnrelease.out

      - store_artifacts:
                path: ~/repo/junit-tests/target


  ##################################################################
  ##
  ##TEST-BROWSERSTACK
  ##
  ##################################################################

  test-bstack-firefox-latest:
    <<: *docker_setup
    environment:
      BROWSERPROFILE: bs-firefox-latest.yaml
      BROWSERSTACK_LOCAL_IDENTIFIER: ff1
    <<: *browserstack_run

  test-bstack-edge-latest:
    <<: *docker_setup
    environment:
      BROWSERPROFILE: bs-edge-latest.yaml
      BROWSERSTACK_LOCAL_IDENTIFIER: eg1
    <<: *browserstack_run

  test-bstack-safari-latest:
    <<: *docker_setup
    environment:
      BROWSERPROFILE: bs-safari-latest.yaml
      BROWSERSTACK_LOCAL_IDENTIFIER: sf1
    <<: *browserstack_run


  test-bstack-chrome-latest:
    <<: *docker_setup
    environment:
      BROWSERPROFILE: bs-chrome-latest.yaml
      BROWSERSTACK_LOCAL_IDENTIFIER: ch1
    <<: *browserstack_run


  test-bstack-IE6-WinXP:
    <<: *docker_setup
    environment:
      BROWSERPROFILE: bs-IE6-WinXP.yaml
      BROWSERSTACK_LOCAL_IDENTIFIER: ie6
    <<: *browserstack_run

  ##################################################################
  ##
  ##TEST-PHATNOMJS JOB
  ##
  ##################################################################
  test-phantomjs:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:8u141-browsers

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m

    steps:

      - checkout

      - restore_cache:
          keys:
            # when lock file changes, use increasingly general patterns to restore cache
            - maven-repo-v1-{{ .Branch }}-{{ checksum "pom.xml" }}
            - maven-repo-v1-{{ .Branch }}-
            - maven-repo-v1-

      - run:
          name: Install phantomJS
          command: |
            wget https://bitbucket.org/ariya/phantomjs/downloads/phantomjs-2.1.1-linux-x86_64.tar.bz2
            bzip2 -d phantomjs-2.1.1-linux-x86_64.tar.bz2
            tar -xvf phantomjs-2.1.1-linux-x86_64.tar
            sudo cp phantomjs-2.1.1-linux-x86_64/bin/phantomjs /usr/bin/phantomjs
            phantomjs -v

#

      - run:
          name: UI Tests
          command: |
            mvn test -Pbrowser-headless  -Dselenium.profile=local -Dbrowser.profile=properties/local-phantomjs-default


      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "pom.xml" }}


      - run:
          name: Save test results
          command: |
            mkdir -p ~/junit/
            find . -type f -regex ".*/target/surefire-reports/.*xml" -exec cp {} ~/junit/ \;
          when: always

      - store_test_results:
          path: ~/junit

      - run:
          command: |
            touch ~/repo/junit-tests/target/mvnrelease.out
            touch ~/repo/junit-tests/target/circleTag.out
            echo $CIRCLE_TAG > ~/repo/junit-tests/target/circleTag.out
            export MAVEN_RELEASE_VERSION="$(echo $CIRCLE_TAG | cut -c 2-)"
            echo $MAVEN_RELEASE_VERSION > ~/repo/junit-tests/target/mvnrelease.out

      - store_artifacts:
          path: ~/repo/junit-tests/target



  ##################################################################
##
##CREATE PACKAGE JOB
##
##################################################################
  create-package:
    docker:
          # specify the version you desire here
          - image: circleci/openjdk:8u141-browsers

    working_directory: ~/repo

    steps:
      - checkout

      - restore_cache:
            keys:
              # when lock file changes, use increasingly general patterns to restore cache
              - maven-repo-v1-{{ .Branch }}-{{ checksum "pom.xml" }}
              - maven-repo-v1-{{ .Branch }}-
              - maven-repo-v1-


      - run:
          name: Updating Maui version as per tag
          command: |
            export MAVEN_RELEASE_VERSION="$(echo $CIRCLE_TAG | cut -c 2-)"
            mvn versions:set -DnewVersion=$MAVEN_RELEASE_VERSION -f maui/pom.xml
            mvn versions:commit

      - run:
          name: Building packages
          command: |
            export MAVEN_RELEASE_VERSION="$(echo $CIRCLE_TAG | cut -c 2-)"
            cd maui
            mvn clean package -DskipTests=true
            mkdir ~/repo/maui/releasePackage
            mkdir -p /tmp/workspace/release/jars
            mv ~/repo/maui/target/*.jar /tmp/workspace/release/jars/
            export POM_NAME_1='/tmp/workspace/release/jars/maui-'
            export POM_NAME_2='.pom'
            export POM_FULL_NAME="$POM_NAME_1$MAVEN_RELEASE_VERSION$POM_NAME_2"
            cp ~/repo/maui/pom.xml $POM_FULL_NAME

      - persist_to_workspace:
          root: *workspace_root
          paths:
            - release/jars/

      - store_artifacts:
          path: ~/repo/maui/target

##################################################################
##
##BINTRAY UPLOAD JOB
##
##################################################################
  bintray-upload:
    docker:
            # specify the version you desire here
      - image: circleci/openjdk:8u141-browsers

    working_directory: ~/repo

    steps:
      - *attach_workspace

      - run:
          name: install Bintray CLI
          command: |
            cd /tmp
            sudo curl -fL https://getcli.jfrog.io | sh

      - run:
          name: upload artifacts to bintray
          command: |
            export MAVEN_RELEASE_VERSION="$(echo $CIRCLE_TAG | cut -c 2-)"
            export MAUI_URL='testmonkeys/maven/maui/'
            export MAUI_PACKAGE='org/testmonkeys/maui/'
            export VCS_URL='https://github.com/TestMonkeys/maui.git'
            export BINTRAY_URL="$MAUI_URL$MAVEN_RELEASE_VERSION"
            export SEPARATOR='/'
            export PATH="$MAUI_PACKAGE$MAVEN_RELEASE_VERSION$SEPARATOR"
            /tmp/jfrog bt config --user=$BINTRAY_USER --key=$BINTRAY_API_KEY --licenses="Apache-2.0"
            /tmp/jfrog bt u "/tmp/workspace/release/jars/*" $BINTRAY_URL $PATH
            /tmp/jfrog bt gsv $BINTRAY_URL --passphrase=$BINTRAY_GPG_PWD
            /tmp/jfrog bt vp $BINTRAY_URL
      - run:
          name: Sync to Maven Central
          command: |
            sudo apt-get update
            sudo apt-get install gettext
            export MAVEN_RELEASE_VERSION="$(echo $CIRCLE_TAG | cut -c 2-)"
            echo '{"username": "$SONATYPE_USER","password": "$SONATYPE_PASSWORD","close": "1"}' > req.template
            envsubst < req.template > request
            sudo curl -u $BINTRAY_USER:$BINTRAY_API_KEY --header "Content-Type: application/json" --data '@./request' --request POST https://api.bintray.com/maven_central_sync/testmonkeys/maven/maui/versions/$MAVEN_RELEASE_VERSION
            rm request
